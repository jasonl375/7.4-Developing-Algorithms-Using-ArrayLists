import java.util.ArrayList;
import java.sql.Array;
public class Main {
    public static void main(String[] args){
        ArrayList<Integer> pancreas = new ArrayList<>();
        pancreas.add(1);
        pancreas.add(2);
        pancreas.add(2);
        pancreas.add(3);
        pancreas.add(3);
        ArrayList<Integer> kidding = new ArrayList<>();
        kidding.add(3);
        kidding.add(3);
        kidding.add(5);
        kidding.add(5);
        ArrayList<Integer> what = new ArrayList<>();
        what.add(1);
        what.add(2);
        what.add(2);
        Algorm.removeConsecutiveDuplicates(kidding);
        System.out.println(kidding);
        Algorm.removeConsecutiveDuplicates(pancreas);
        System.out.println(pancreas);
        Algorm.removeConsecutiveDuplicates(what);
        System.out.println(what);

        ArrayList<Integer> holm = new ArrayList<>();
        holm.add(1);
        holm.add(2);
        holm.add(2);
        holm.add(3);
        holm.add(3);
        ArrayList<Integer> heyy = new ArrayList<>();
        heyy.add(3);
        heyy.add(3);
        heyy.add(3);
        heyy.add(1);
        Algorm.removeElement(holm, 2);
        System.out.println(holm);
        Algorm.removeElement(what, 2);
        System.out.println(what);
        Algorm.removeElement(heyy, 3);
        System.out.println(heyy);

        ArrayList<Integer> ar1 = new ArrayList<>();
        ar1.add(1);
        ar1.add(2);
        ar1.add(3);
        ar1.add(3);
        ArrayList<Integer> ar2 = new ArrayList<>();
        ar2.add(2);
        ar2.add(3);
        ArrayList<Integer> ar3 = new ArrayList<>();
        ar3.add(1);
        ar3.add(2);
        Algorm.addToAscendingOrder(ar1,4);
        Algorm.addToAscendingOrder(ar2,4);
        Algorm.addToAscendingOrder(ar3,3);
        System.out.println(ar1);
        System.out.println(ar2);
        System.out.println(ar3);

        ArrayList<Integer> a5 = new ArrayList<>();
        a5.add(3);
        a5.add(2);
        a5.add(1);
        ArrayList<Integer> a6 = new ArrayList<>();
        a6.add(2);
        a6.add(3);
        ArrayList<Integer> a7 = new ArrayList<>();
        a7.add(2);
        a7.add(3);
        ArrayList<Integer> a8 = new ArrayList<>();
        a8.add(3);
        a8.add(5);
        ArrayList<Integer> a9 = new ArrayList<>();
        a9.add(5);
        a9.add(3);
        System.out.println(Algorm.checkReverseOrder(what,a5));
        System.out.println(Algorm.checkReverseOrder(a6,a7));
        System.out.println(Algorm.checkReverseOrder(a8,a9));

        ArrayList<Integer> a10 = new ArrayList<>();
        ArrayList<Integer> a11 = new ArrayList<>();
        ArrayList<Integer> a12 = new ArrayList<>();
        a10.add(3);
        a10.add(2);
        a10.add(1);
        a11.add(4);
        a11.add(7);
        a11.add(1);
        a12.add(1);
        a12.add(2);
        a12.add(0);
        System.out.println(Algorm.findMaximum(a10));
        System.out.println(Algorm.findMaximum(a11));
        System.out.println(Algorm.findMaximum(a12));

        ArrayList<Integer> meat = new ArrayList<>();
        meat.add(3);
        meat.add(2);
        meat.add(1);
        ArrayList<Integer> egg = new ArrayList<>();
        egg.add(2);
        egg.add(12);
        ArrayList<Integer> fried = new ArrayList<>();
        fried.add(12);
        fried.add(11);
        System.out.println(Algorm.findMinimum(meat));
        System.out.println(Algorm.findMinimum(egg));
        System.out.println(Algorm.findMinimum(fried));

        ArrayList<String> hehe = new ArrayList<>();
        ArrayList<String> youuuu = new ArrayList<>();
        ArrayList<String> kool = new ArrayList<>();
        hehe.add("Hello,");
        hehe.add("World");
        hehe.add("!");
        youuuu.add("Yippee");
        youuuu.add("Awesome");
        kool.add("6");
        kool.add("nine");
        System.out.println(Algorm.findShortestString(hehe));
        System.out.println(Algorm.findShortestString(youuuu));
        System.out.println(Algorm.findShortestString(kool));

        ArrayList<String> yee = new ArrayList<String>();
        yee.add("i");
        yee.add("like");
        yee.add("rnb");
        System.out.println(Algorm.longestString(yee));
        ArrayList<String> example = new ArrayList<String>();
        example.add("hello,");
        example.add("world");
        example.add("!");
        System.out.println(Algorm.longestString(example));
        ArrayList<String> nothing = new ArrayList<String>();
        System.out.println(Algorm.longestString(nothing));

        ArrayList<Integer> passionFruit = new ArrayList<>();
        passionFruit.add(2);
        passionFruit.add(3);
        passionFruit.add(4);
        ArrayList<Integer> grapeFruit = new ArrayList<>();
        grapeFruit.add(-1);
        grapeFruit.add(-2);
        grapeFruit.add(-3);
        ArrayList<Integer> emp = new ArrayList<>();
        System.out.println(Algorm.absDiff(passionFruit, grapeFruit));
        System.out.println(Algorm.absDiff(passionFruit, emp));
        System.out.println(Algorm.absDiff(grapeFruit, emp));

        ArrayList<Double> talk = new ArrayList<>();
        talk.add(2.0);
        talk.add(3.0);
        talk.add(4.0);
        ArrayList<Double> to = new ArrayList<>();
        to.add(-1.0);
        to.add(-2.0);
        to.add(-3.0);
        System.out.println(Algorm.calcMean(talk));
        System.out.println(Algorm.calcMean(to));
        ArrayList<Double> examp = new ArrayList<>();
        examp.add(1.5);
        examp.add(3.5);
        examp.add(-5.5);
        System.out.println(Algorm.calcMean(examp));

        ArrayList<Integer> nonStop = new ArrayList<>();
        nonStop.add(1);
        nonStop.add(2);
        nonStop.add(3);
        Algorm.reverseEle(nonStop);
        Algorm.reverseEle(passionFruit);
        Algorm.reverseEle(grapeFruit);
        System.out.println(nonStop);
        System.out.println(passionFruit);
        System.out.println(grapeFruit);

        ArrayList<Integer> sistar = new ArrayList<>();
        sistar.add(1);
        sistar.add(2);
        sistar.add(3);
        sistar.add(3);
        sistar.add(4);
        System.out.println(Algorm.hasConsec(sistar));
        System.out.println(Algorm.hasConsec(passionFruit));
        System.out.println(Algorm.hasConsec(grapeFruit));

        ArrayList<Integer> loving = new ArrayList<>();
        sistar.add(1);
        sistar.add(0);
        sistar.add(-1);
        System.out.println(Algorm.findNegative(loving));
        System.out.println(Algorm.findNegative(passionFruit));
        System.out.println(Algorm.findNegative(grapeFruit));

        ArrayList<Integer> over = new ArrayList<>();
        over.add(1);
        over.add(2);
        over.add(3);
        over.add(2);
        System.out.println(Algorm.twoSame(over));
        System.out.println(Algorm.twoSame(passionFruit));
        System.out.println(Algorm.twoSame(grapeFruit));
    }
}
